{
  "version": 3,
  "sources": ["../node_modules/@runno/wasi/dist/wasi.js", "../src/index.ts"],
  "sourcesContent": ["var lt = Object.defineProperty;\nvar dt = (e, t, i) => t in e ? lt(e, t, { enumerable: !0, configurable: !0, writable: !0, value: i }) : e[t] = i;\nvar m = (e, t, i) => (dt(e, typeof t != \"symbol\" ? t + \"\" : t, i), i);\nvar c;\n(function(e) {\n  e[e.SUCCESS = 0] = \"SUCCESS\", e[e.E2BIG = 1] = \"E2BIG\", e[e.EACCESS = 2] = \"EACCESS\", e[e.EADDRINUSE = 3] = \"EADDRINUSE\", e[e.EADDRNOTAVAIL = 4] = \"EADDRNOTAVAIL\", e[e.EAFNOSUPPORT = 5] = \"EAFNOSUPPORT\", e[e.EAGAIN = 6] = \"EAGAIN\", e[e.EALREADY = 7] = \"EALREADY\", e[e.EBADF = 8] = \"EBADF\", e[e.EBADMSG = 9] = \"EBADMSG\", e[e.EBUSY = 10] = \"EBUSY\", e[e.ECANCELED = 11] = \"ECANCELED\", e[e.ECHILD = 12] = \"ECHILD\", e[e.ECONNABORTED = 13] = \"ECONNABORTED\", e[e.ECONNREFUSED = 14] = \"ECONNREFUSED\", e[e.ECONNRESET = 15] = \"ECONNRESET\", e[e.EDEADLK = 16] = \"EDEADLK\", e[e.EDESTADDRREQ = 17] = \"EDESTADDRREQ\", e[e.EDOM = 18] = \"EDOM\", e[e.EDQUOT = 19] = \"EDQUOT\", e[e.EEXIST = 20] = \"EEXIST\", e[e.EFAULT = 21] = \"EFAULT\", e[e.EFBIG = 22] = \"EFBIG\", e[e.EHOSTUNREACH = 23] = \"EHOSTUNREACH\", e[e.EIDRM = 24] = \"EIDRM\", e[e.EILSEQ = 25] = \"EILSEQ\", e[e.EINPROGRESS = 26] = \"EINPROGRESS\", e[e.EINTR = 27] = \"EINTR\", e[e.EINVAL = 28] = \"EINVAL\", e[e.EIO = 29] = \"EIO\", e[e.EISCONN = 30] = \"EISCONN\", e[e.EISDIR = 31] = \"EISDIR\", e[e.ELOOP = 32] = \"ELOOP\", e[e.EMFILE = 33] = \"EMFILE\", e[e.EMLINK = 34] = \"EMLINK\", e[e.EMSGSIZE = 35] = \"EMSGSIZE\", e[e.EMULTIHOP = 36] = \"EMULTIHOP\", e[e.ENAMETOOLONG = 37] = \"ENAMETOOLONG\", e[e.ENETDOWN = 38] = \"ENETDOWN\", e[e.ENETRESET = 39] = \"ENETRESET\", e[e.ENETUNREACH = 40] = \"ENETUNREACH\", e[e.ENFILE = 41] = \"ENFILE\", e[e.ENOBUFS = 42] = \"ENOBUFS\", e[e.ENODEV = 43] = \"ENODEV\", e[e.ENOENT = 44] = \"ENOENT\", e[e.ENOEXEC = 45] = \"ENOEXEC\", e[e.ENOLCK = 46] = \"ENOLCK\", e[e.ENOLINK = 47] = \"ENOLINK\", e[e.ENOMEM = 48] = \"ENOMEM\", e[e.ENOMSG = 49] = \"ENOMSG\", e[e.ENOPROTOOPT = 50] = \"ENOPROTOOPT\", e[e.ENOSPC = 51] = \"ENOSPC\", e[e.ENOSYS = 52] = \"ENOSYS\", e[e.ENOTCONN = 53] = \"ENOTCONN\", e[e.ENOTDIR = 54] = \"ENOTDIR\", e[e.ENOTEMPTY = 55] = \"ENOTEMPTY\", e[e.ENOTRECOVERABLE = 56] = \"ENOTRECOVERABLE\", e[e.ENOTSOCK = 57] = \"ENOTSOCK\", e[e.ENOTSUP = 58] = \"ENOTSUP\", e[e.ENOTTY = 59] = \"ENOTTY\", e[e.ENXIO = 60] = \"ENXIO\", e[e.EOVERFLOW = 61] = \"EOVERFLOW\", e[e.EOWNERDEAD = 62] = \"EOWNERDEAD\", e[e.EPERM = 63] = \"EPERM\", e[e.EPIPE = 64] = \"EPIPE\", e[e.EPROTO = 65] = \"EPROTO\", e[e.EPROTONOSUPPORT = 66] = \"EPROTONOSUPPORT\", e[e.EPROTOTYPE = 67] = \"EPROTOTYPE\", e[e.ERANGE = 68] = \"ERANGE\", e[e.EROFS = 69] = \"EROFS\", e[e.ESPIPE = 70] = \"ESPIPE\", e[e.ESRCH = 71] = \"ESRCH\", e[e.ESTALE = 72] = \"ESTALE\", e[e.ETIMEDOUT = 73] = \"ETIMEDOUT\", e[e.ETXTBSY = 74] = \"ETXTBSY\", e[e.EXDEV = 75] = \"EXDEV\", e[e.ENOTCAPABLE = 76] = \"ENOTCAPABLE\";\n})(c || (c = {}));\nvar G;\n(function(e) {\n  e[e.REALTIME = 0] = \"REALTIME\", e[e.MONOTONIC = 1] = \"MONOTONIC\", e[e.PROCESS_CPUTIME_ID = 2] = \"PROCESS_CPUTIME_ID\", e[e.THREAD_CPUTIME_ID = 3] = \"THREAD_CPUTIME_ID\";\n})(G || (G = {}));\nvar y;\n(function(e) {\n  e[e.SET = 0] = \"SET\", e[e.CUR = 1] = \"CUR\", e[e.END = 2] = \"END\";\n})(y || (y = {}));\nvar R;\n(function(e) {\n  e[e.UNKNOWN = 0] = \"UNKNOWN\", e[e.BLOCK_DEVICE = 1] = \"BLOCK_DEVICE\", e[e.CHARACTER_DEVICE = 2] = \"CHARACTER_DEVICE\", e[e.DIRECTORY = 3] = \"DIRECTORY\", e[e.REGULAR_FILE = 4] = \"REGULAR_FILE\", e[e.SOCKET_DGRAM = 5] = \"SOCKET_DGRAM\", e[e.SOCKET_STREAM = 6] = \"SOCKET_STREAM\", e[e.SYMBOLIC_LINK = 7] = \"SYMBOLIC_LINK\";\n})(R || (R = {}));\nvar Q;\n(function(e) {\n  e[e.DIR = 0] = \"DIR\";\n})(Q || (Q = {}));\nvar p;\n(function(e) {\n  e[e.CLOCK = 0] = \"CLOCK\", e[e.FD_READ = 1] = \"FD_READ\", e[e.FD_WRITE = 2] = \"FD_WRITE\";\n})(p || (p = {}));\nconst at = {\n  SYMLINK_FOLLOW: 1\n  // As long as the resolved path corresponds to a symbolic\n  // link, it is expanded.\n}, T = {\n  CREAT: 1,\n  DIRECTORY: 2,\n  EXCL: 4,\n  TRUNC: 8\n  // Truncate file to size 0.\n}, E = {\n  APPEND: 1,\n  DSYNC: 2,\n  NONBLOCK: 4,\n  RSYNC: 8,\n  SYNC: 16\n  // Write according to synchronized I/O file integrity completion. In addition to synchronizing the data stored in the file, the implementation may also synchronously update the file's metadata.\n}, o = {\n  FD_DATASYNC: BigInt(1) << BigInt(0),\n  FD_READ: BigInt(1) << BigInt(1),\n  FD_SEEK: BigInt(1) << BigInt(2),\n  FD_FDSTAT_SET_FLAGS: BigInt(1) << BigInt(3),\n  FD_SYNC: BigInt(1) << BigInt(4),\n  FD_TELL: BigInt(1) << BigInt(5),\n  FD_WRITE: BigInt(1) << BigInt(6),\n  FD_ADVISE: BigInt(1) << BigInt(7),\n  FD_ALLOCATE: BigInt(1) << BigInt(8),\n  PATH_CREATE_DIRECTORY: BigInt(1) << BigInt(9),\n  PATH_CREATE_FILE: BigInt(1) << BigInt(10),\n  PATH_LINK_SOURCE: BigInt(1) << BigInt(11),\n  PATH_LINK_TARGET: BigInt(1) << BigInt(12),\n  PATH_OPEN: BigInt(1) << BigInt(13),\n  FD_READDIR: BigInt(1) << BigInt(14),\n  PATH_READLINK: BigInt(1) << BigInt(15),\n  PATH_RENAME_SOURCE: BigInt(1) << BigInt(16),\n  PATH_RENAME_TARGET: BigInt(1) << BigInt(17),\n  PATH_FILESTAT_GET: BigInt(1) << BigInt(18),\n  PATH_FILESTAT_SET_SIZE: BigInt(1) << BigInt(19),\n  PATH_FILESTAT_SET_TIMES: BigInt(1) << BigInt(20),\n  FD_FILESTAT_GET: BigInt(1) << BigInt(21),\n  FD_FILESTAT_SET_SIZE: BigInt(1) << BigInt(22),\n  FD_FILESTAT_SET_TIMES: BigInt(1) << BigInt(23),\n  PATH_SYMLINK: BigInt(1) << BigInt(24),\n  PATH_REMOVE_DIRECTORY: BigInt(1) << BigInt(25),\n  PATH_UNLINK_FILE: BigInt(1) << BigInt(26),\n  POLL_FD_READWRITE: BigInt(1) << BigInt(27),\n  SOCK_SHUTDOWN: BigInt(1) << BigInt(28),\n  SOCK_ACCEPT: BigInt(1) << BigInt(29)\n}, U = {\n  ATIM: 1,\n  ATIM_NOW: 2,\n  MTIM: 4,\n  MTIM_NOW: 8\n  // Adjust the last data modification timestamp to the time of clock clockid::realtime.\n}, et = {\n  SUBSCRIPTION_CLOCK_ABSTIME: 1\n  // If set, treat the timestamp provided in subscription_clock::timeout as an absolute timestamp of clock subscription_clock::id. If clear, treat the timestamp provided in subscription_clock::timeout relative to the current time value of clock subscription_clock::id.\n}, Vt = {\n  FD_READWRITE_HANGUP: 1\n  // The peer of this socket has closed or disconnected.\n}, P = 64, x = 48, z = 32, Gt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  get Clock() {\n    return G;\n  },\n  EVENT_SIZE: z,\n  EventReadWriteFlags: Vt,\n  get EventType() {\n    return p;\n  },\n  FILESTAT_SIZE: P,\n  FileDescriptorFlags: E,\n  FileStatTimestampFlags: U,\n  get FileType() {\n    return R;\n  },\n  LookupFlags: at,\n  OpenFlags: T,\n  get PreopenType() {\n    return Q;\n  },\n  get Result() {\n    return c;\n  },\n  RightsFlags: o,\n  SUBSCRIPTION_SIZE: x,\n  SubscriptionClockFlags: et,\n  get Whence() {\n    return y;\n  }\n}, Symbol.toStringTag, { value: \"Module\" }));\nvar C;\n(function(e) {\n  e[e.CUR = 0] = \"CUR\", e[e.END = 1] = \"END\", e[e.SET = 2] = \"SET\";\n})(C || (C = {}));\nclass Zt {\n  constructor(t) {\n    m(this, \"fs\");\n    m(this, \"args\");\n    // Program args (like from a terminal program)\n    m(this, \"env\");\n    // Environment (like a .env file)\n    m(this, \"stdin\");\n    m(this, \"stdout\");\n    m(this, \"stderr\");\n    m(this, \"debug\");\n    m(this, \"isTTY\");\n    this.fs = (t == null ? void 0 : t.fs) ?? {}, this.args = (t == null ? void 0 : t.args) ?? [], this.env = (t == null ? void 0 : t.env) ?? {}, this.stdin = (t == null ? void 0 : t.stdin) ?? (() => null), this.stdout = (t == null ? void 0 : t.stdout) ?? (() => {\n    }), this.stderr = (t == null ? void 0 : t.stderr) ?? (() => {\n    }), this.debug = t == null ? void 0 : t.debug, this.isTTY = !!(t != null && t.isTTY);\n  }\n}\nclass ht {\n  constructor(t) {\n    m(this, \"fs\");\n    m(this, \"nextFD\", 10);\n    m(this, \"openMap\", /* @__PURE__ */ new Map());\n    this.fs = { ...t }, this.openMap.set(3, new b(this.fs, \"/\"));\n  }\n  //\n  // Helpers\n  //\n  openFile(t, i, n) {\n    const s = new S(t, n);\n    i && (s.buffer = new Uint8Array(new ArrayBuffer(1024), 0, 0));\n    const l = this.nextFD;\n    return this.openMap.set(l, s), this.nextFD++, [c.SUCCESS, l];\n  }\n  openDir(t, i) {\n    const n = new b(t, i), s = this.nextFD;\n    return this.openMap.set(s, n), this.nextFD++, [c.SUCCESS, s];\n  }\n  hasDir(t, i) {\n    return i === \".\" ? !0 : t.containsDirectory(i);\n  }\n  //\n  // Public Interface\n  //\n  open(t, i, n, s) {\n    const l = !!(n & T.CREAT), d = !!(n & T.DIRECTORY), V = !!(n & T.EXCL), a = !!(n & T.TRUNC), Z = this.openMap.get(t);\n    if (!(Z instanceof b))\n      return [c.EBADF];\n    if (Z.containsFile(i))\n      return d ? [c.ENOTDIR] : V ? [c.EEXIST] : this.openFile(Z.get(i), a, s);\n    if (this.hasDir(Z, i)) {\n      if (i === \".\")\n        return this.openDir(this.fs, \"/\");\n      const h = `/${i}/`, r = Object.entries(this.fs).filter(([u]) => u.startsWith(h));\n      return this.openDir(Object.fromEntries(r), h);\n    } else {\n      if (l) {\n        const h = Z.fullPath(i);\n        return this.fs[h] = {\n          path: h,\n          mode: \"binary\",\n          content: new Uint8Array(),\n          timestamps: {\n            access: /* @__PURE__ */ new Date(),\n            modification: /* @__PURE__ */ new Date(),\n            change: /* @__PURE__ */ new Date()\n          }\n        }, this.openFile(this.fs[h], a, s);\n      }\n      return [c.ENOTCAPABLE];\n    }\n  }\n  close(t) {\n    if (!this.openMap.has(t))\n      return c.EBADF;\n    const i = this.openMap.get(t);\n    return i instanceof S && i.sync(), this.openMap.delete(t), c.SUCCESS;\n  }\n  read(t, i) {\n    const n = this.openMap.get(t);\n    return !n || n instanceof b ? [c.EBADF] : [c.SUCCESS, n.read(i)];\n  }\n  pread(t, i, n) {\n    const s = this.openMap.get(t);\n    return !s || s instanceof b ? [c.EBADF] : [c.SUCCESS, s.pread(i, n)];\n  }\n  write(t, i) {\n    const n = this.openMap.get(t);\n    return !n || n instanceof b ? c.EBADF : (n.write(i), c.SUCCESS);\n  }\n  pwrite(t, i, n) {\n    const s = this.openMap.get(t);\n    return !s || s instanceof b ? c.EBADF : (s.pwrite(i, n), c.SUCCESS);\n  }\n  sync(t) {\n    const i = this.openMap.get(t);\n    return !i || i instanceof b ? c.EBADF : (i.sync(), c.SUCCESS);\n  }\n  seek(t, i, n) {\n    const s = this.openMap.get(t);\n    return !s || s instanceof b ? [c.EBADF] : [c.SUCCESS, s.seek(i, n)];\n  }\n  tell(t) {\n    const i = this.openMap.get(t);\n    return !i || i instanceof b ? [c.EBADF] : [c.SUCCESS, i.tell()];\n  }\n  renumber(t, i) {\n    return !this.exists(t) || !this.exists(i) ? c.EBADF : (t === i || (this.close(i), this.openMap.set(i, this.openMap.get(t))), c.SUCCESS);\n  }\n  unlink(t, i) {\n    const n = this.openMap.get(t);\n    if (!(n instanceof b))\n      return c.EBADF;\n    if (!n.contains(i))\n      return c.ENOENT;\n    for (const s of Object.keys(this.fs))\n      (s === n.fullPath(i) || s.startsWith(`${n.fullPath(i)}/`)) && delete this.fs[s];\n    return c.SUCCESS;\n  }\n  rename(t, i, n, s) {\n    const l = this.openMap.get(t), d = this.openMap.get(n);\n    if (!(l instanceof b) || !(d instanceof b))\n      return c.EBADF;\n    if (!l.contains(i))\n      return c.ENOENT;\n    if (d.contains(s))\n      return c.EEXIST;\n    const V = l.fullPath(i), a = d.fullPath(s);\n    for (const Z of Object.keys(this.fs))\n      if (Z.startsWith(V)) {\n        const h = Z.replace(V, a);\n        this.fs[h] = this.fs[Z], this.fs[h].path = h, delete this.fs[Z];\n      }\n    return c.SUCCESS;\n  }\n  list(t) {\n    const i = this.openMap.get(t);\n    return i instanceof b ? [c.SUCCESS, i.list()] : [c.EBADF];\n  }\n  stat(t) {\n    const i = this.openMap.get(t);\n    return i instanceof S ? [c.SUCCESS, i.stat()] : [c.EBADF];\n  }\n  pathStat(t, i) {\n    const n = this.openMap.get(t);\n    if (!(n instanceof b))\n      return [c.EBADF];\n    if (n.containsFile(i)) {\n      const s = n.fullPath(i), l = new S(this.fs[s], 0).stat();\n      return [c.SUCCESS, l];\n    } else if (this.hasDir(n, i)) {\n      if (i === \".\")\n        return [c.SUCCESS, new b(this.fs, \"/\").stat()];\n      const s = `/${i}/`, l = Object.entries(this.fs).filter(([V]) => V.startsWith(s)), d = new b(Object.fromEntries(l), s).stat();\n      return [c.SUCCESS, d];\n    } else\n      return [c.ENOTCAPABLE];\n  }\n  setFlags(t, i) {\n    const n = this.openMap.get(t);\n    return n instanceof S ? (n.setFlags(i), c.SUCCESS) : c.EBADF;\n  }\n  setSize(t, i) {\n    const n = this.openMap.get(t);\n    return n instanceof S ? (n.setSize(Number(i)), c.SUCCESS) : c.EBADF;\n  }\n  setAccessTime(t, i) {\n    const n = this.openMap.get(t);\n    return n instanceof S ? (n.setAccessTime(i), c.SUCCESS) : c.EBADF;\n  }\n  setModificationTime(t, i) {\n    const n = this.openMap.get(t);\n    return n instanceof S ? (n.setModificationTime(i), c.SUCCESS) : c.EBADF;\n  }\n  pathSetAccessTime(t, i, n) {\n    const s = this.openMap.get(t);\n    if (!(s instanceof b))\n      return c.EBADF;\n    const l = s.get(i);\n    if (!l)\n      return c.ENOTCAPABLE;\n    const d = new S(l, 0);\n    return d.setAccessTime(n), d.sync(), c.SUCCESS;\n  }\n  pathSetModificationTime(t, i, n) {\n    const s = this.openMap.get(t);\n    if (!(s instanceof b))\n      return c.EBADF;\n    const l = s.get(i);\n    if (!l)\n      return c.ENOTCAPABLE;\n    const d = new S(l, 0);\n    return d.setModificationTime(n), d.sync(), c.SUCCESS;\n  }\n  pathCreateDir(t, i) {\n    const n = this.openMap.get(t);\n    if (!(n instanceof b))\n      return c.EBADF;\n    if (n.contains(i))\n      return c.ENOTCAPABLE;\n    const s = `${n.fullPath(i)}/.runno`;\n    return this.fs[s] = {\n      path: s,\n      timestamps: {\n        access: /* @__PURE__ */ new Date(),\n        modification: /* @__PURE__ */ new Date(),\n        change: /* @__PURE__ */ new Date()\n      },\n      mode: \"string\",\n      content: \"\"\n    }, c.SUCCESS;\n  }\n  //\n  // Public Helpers\n  //\n  exists(t) {\n    return this.openMap.has(t);\n  }\n  fileType(t) {\n    const i = this.openMap.get(t);\n    return i ? i instanceof S ? R.REGULAR_FILE : R.DIRECTORY : R.UNKNOWN;\n  }\n  fileFdflags(t) {\n    const i = this.openMap.get(t);\n    return i instanceof S ? i.fdflags : 0;\n  }\n}\nclass S {\n  constructor(t, i) {\n    m(this, \"file\");\n    m(this, \"buffer\");\n    m(this, \"_offset\", BigInt(0));\n    m(this, \"isDirty\", !1);\n    m(this, \"fdflags\");\n    m(this, \"flagAppend\");\n    m(this, \"flagDSync\");\n    m(this, \"flagNonBlock\");\n    m(this, \"flagRSync\");\n    m(this, \"flagSync\");\n    if (this.file = t, this.file.mode === \"string\") {\n      const n = new TextEncoder();\n      this.buffer = n.encode(this.file.content);\n    } else\n      this.buffer = this.file.content;\n    this.fdflags = i, this.flagAppend = !!(i & E.APPEND), this.flagDSync = !!(i & E.DSYNC), this.flagNonBlock = !!(i & E.NONBLOCK), this.flagRSync = !!(i & E.RSYNC), this.flagSync = !!(i & E.SYNC);\n  }\n  get offset() {\n    return Number(this._offset);\n  }\n  read(t) {\n    const i = this.buffer.subarray(this.offset, this.offset + t);\n    return this._offset += BigInt(i.length), i;\n  }\n  pread(t, i) {\n    return this.buffer.subarray(i, i + t);\n  }\n  write(t) {\n    if (this.isDirty = !0, this.flagAppend) {\n      const i = this.buffer.length;\n      this.resize(i + t.byteLength), this.buffer.set(t, i);\n    } else {\n      const i = Math.max(this.offset + t.byteLength, this.buffer.byteLength);\n      this.resize(i), this.buffer.set(t, this.offset), this._offset += BigInt(t.byteLength);\n    }\n    (this.flagDSync || this.flagSync) && this.sync();\n  }\n  pwrite(t, i) {\n    if (this.isDirty = !0, this.flagAppend) {\n      const n = this.buffer.length;\n      this.resize(n + t.byteLength), this.buffer.set(t, n);\n    } else {\n      const n = Math.max(i + t.byteLength, this.buffer.byteLength);\n      this.resize(n), this.buffer.set(t, i);\n    }\n    (this.flagDSync || this.flagSync) && this.sync();\n  }\n  sync() {\n    if (!this.isDirty)\n      return;\n    if (this.isDirty = !1, this.file.mode === \"binary\") {\n      this.file.content = new Uint8Array(this.buffer);\n      return;\n    }\n    const t = new TextDecoder();\n    this.file.content = t.decode(this.buffer);\n  }\n  seek(t, i) {\n    switch (i) {\n      case y.SET:\n        this._offset = t;\n        break;\n      case y.CUR:\n        this._offset += t;\n        break;\n      case y.END:\n        this._offset = BigInt(this.buffer.length) + t;\n        break;\n    }\n    return this._offset;\n  }\n  tell() {\n    return this._offset;\n  }\n  stat() {\n    return {\n      path: this.file.path,\n      timestamps: this.file.timestamps,\n      type: R.REGULAR_FILE,\n      byteLength: this.buffer.length\n    };\n  }\n  setFlags(t) {\n    this.fdflags = t;\n  }\n  setSize(t) {\n    this.resize(t);\n  }\n  setAccessTime(t) {\n    this.file.timestamps.access = t;\n  }\n  setModificationTime(t) {\n    this.file.timestamps.modification = t;\n  }\n  /**\n   * Resizes the buffer to be exactly requiredBytes length, while resizing the\n   * underlying buffer to be larger if necessary.\n   *\n   * Resizing will internally double the buffer size to reduce the need for\n   * resizing often.\n   *\n   * @param requiredBytes how many bytes the buffer needs to have available\n   */\n  resize(t) {\n    if (t <= this.buffer.buffer.byteLength) {\n      this.buffer = new Uint8Array(this.buffer.buffer, 0, t);\n      return;\n    }\n    let i;\n    this.buffer.buffer.byteLength === 0 ? i = new ArrayBuffer(t < 1024 ? 1024 : t * 2) : t > this.buffer.buffer.byteLength * 2 ? i = new ArrayBuffer(t * 2) : i = new ArrayBuffer(this.buffer.buffer.byteLength * 2);\n    const n = new Uint8Array(i, 0, t);\n    n.set(this.buffer), this.buffer = n;\n  }\n}\nfunction Y(e, t) {\n  const i = t.replace(/[/\\-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"), n = new RegExp(`^${i}`);\n  return e.replace(n, \"\");\n}\nclass b {\n  // full folder path including /\n  constructor(t, i) {\n    m(this, \"dir\");\n    m(this, \"prefix\");\n    this.dir = t, this.prefix = i;\n  }\n  containsFile(t) {\n    for (const i of Object.keys(this.dir))\n      if (Y(i, this.prefix) === t)\n        return !0;\n    return !1;\n  }\n  containsDirectory(t) {\n    for (const i of Object.keys(this.dir))\n      if (Y(i, this.prefix).startsWith(`${t}/`))\n        return !0;\n    return !1;\n  }\n  contains(t) {\n    for (const i of Object.keys(this.dir)) {\n      const n = Y(i, this.prefix);\n      if (n === t || n.startsWith(`${t}/`))\n        return !0;\n    }\n    return !1;\n  }\n  get(t) {\n    return this.dir[this.fullPath(t)];\n  }\n  fullPath(t) {\n    return `${this.prefix}${t}`;\n  }\n  list() {\n    const t = [], i = /* @__PURE__ */ new Set();\n    for (const n of Object.keys(this.dir)) {\n      const s = Y(n, this.prefix);\n      if (s.includes(\"/\")) {\n        const l = s.split(\"/\")[0];\n        if (i.has(l))\n          continue;\n        i.add(l), t.push({ name: l, type: R.DIRECTORY });\n      } else\n        t.push({\n          name: s,\n          type: R.REGULAR_FILE\n        });\n    }\n    return t;\n  }\n  stat() {\n    return {\n      path: this.prefix,\n      timestamps: {\n        access: /* @__PURE__ */ new Date(),\n        modification: /* @__PURE__ */ new Date(),\n        change: /* @__PURE__ */ new Date()\n      },\n      type: R.DIRECTORY,\n      byteLength: 0\n    };\n  }\n}\nlet D = [];\nfunction f(e) {\n  D.push(e);\n}\nfunction rt() {\n  const e = D;\n  return D = [], e;\n}\nclass J extends Error {\n}\nclass A extends Error {\n}\nclass H {\n  constructor(t) {\n    m(this, \"instance\");\n    m(this, \"module\");\n    m(this, \"memory\");\n    m(this, \"context\");\n    m(this, \"drive\");\n    m(this, \"hasBeenInitialized\", !1);\n    this.context = new Zt(t), this.drive = new ht(this.context.fs);\n  }\n  /**\n   * Start a WASI command.\n   *\n   */\n  static async start(t, i = {}) {\n    const n = new H(i), s = await WebAssembly.instantiateStreaming(t, n.getImportObject());\n    return n.start(s);\n  }\n  /**\n   * Initialize a WASI reactor.\n   *\n   * Returns the WebAssembly instance exports.\n   */\n  static async initialize(t, i = {}) {\n    const n = new H(i), s = await WebAssembly.instantiateStreaming(t, n.getImportObject());\n    return n.initialize(s), s.instance.exports;\n  }\n  getImportObject() {\n    return {\n      wasi_snapshot_preview1: this.getImports(\"preview1\", this.context.debug),\n      wasi_unstable: this.getImports(\"unstable\", this.context.debug)\n    };\n  }\n  /**\n   * Start a WASI command.\n   *\n   * See: https://github.com/WebAssembly/WASI/blob/main/legacy/application-abi.md\n   */\n  start(t, i = {}) {\n    if (this.hasBeenInitialized)\n      throw new A(\"This instance has already been initialized\");\n    if (this.hasBeenInitialized = !0, this.instance = t.instance, this.module = t.module, this.memory = i.memory ?? this.instance.exports.memory, \"_initialize\" in this.instance.exports)\n      throw new J(\"WebAssembly instance is a reactor and should be started with initialize.\");\n    if (!(\"_start\" in this.instance.exports))\n      throw new J(\"WebAssembly instance doesn't export _start, it may not be WASI or may be a Reactor.\");\n    const n = this.instance.exports._start;\n    try {\n      n();\n    } catch (s) {\n      if (s instanceof v)\n        return {\n          exitCode: s.code,\n          fs: this.drive.fs\n        };\n      if (s instanceof WebAssembly.RuntimeError)\n        return {\n          exitCode: 134,\n          fs: this.drive.fs\n        };\n      throw s;\n    }\n    return {\n      exitCode: 0,\n      fs: this.drive.fs\n    };\n  }\n  /**\n   * Initialize a WASI Reactor.\n   *\n   * See: https://github.com/WebAssembly/WASI/blob/main/legacy/application-abi.md\n   */\n  initialize(t, i = {}) {\n    if (this.hasBeenInitialized)\n      throw new A(\"This instance has already been initialized\");\n    if (this.hasBeenInitialized = !0, this.instance = t.instance, this.module = t.module, this.memory = i.memory ?? this.instance.exports.memory, \"_start\" in this.instance.exports)\n      throw new J(\"WebAssembly instance is a command and should be started with start.\");\n    if (\"_initialize\" in this.instance.exports) {\n      const n = this.instance.exports._initialize;\n      n();\n    }\n  }\n  getImports(t, i) {\n    const n = {\n      args_get: this.args_get.bind(this),\n      args_sizes_get: this.args_sizes_get.bind(this),\n      clock_res_get: this.clock_res_get.bind(this),\n      clock_time_get: this.clock_time_get.bind(this),\n      environ_get: this.environ_get.bind(this),\n      environ_sizes_get: this.environ_sizes_get.bind(this),\n      proc_exit: this.proc_exit.bind(this),\n      random_get: this.random_get.bind(this),\n      sched_yield: this.sched_yield.bind(this),\n      // File Descriptors\n      fd_advise: this.fd_advise.bind(this),\n      fd_allocate: this.fd_allocate.bind(this),\n      fd_close: this.fd_close.bind(this),\n      fd_datasync: this.fd_datasync.bind(this),\n      fd_fdstat_get: this.fd_fdstat_get.bind(this),\n      fd_fdstat_set_flags: this.fd_fdstat_set_flags.bind(this),\n      fd_fdstat_set_rights: this.fd_fdstat_set_rights.bind(this),\n      fd_filestat_get: this.fd_filestat_get.bind(this),\n      fd_filestat_set_size: this.fd_filestat_set_size.bind(this),\n      fd_filestat_set_times: this.fd_filestat_set_times.bind(this),\n      fd_pread: this.fd_pread.bind(this),\n      fd_prestat_dir_name: this.fd_prestat_dir_name.bind(this),\n      fd_prestat_get: this.fd_prestat_get.bind(this),\n      fd_pwrite: this.fd_pwrite.bind(this),\n      fd_read: this.fd_read.bind(this),\n      fd_readdir: this.fd_readdir.bind(this),\n      fd_renumber: this.fd_renumber.bind(this),\n      fd_seek: this.fd_seek.bind(this),\n      fd_sync: this.fd_sync.bind(this),\n      fd_tell: this.fd_tell.bind(this),\n      fd_write: this.fd_write.bind(this),\n      // Paths\n      path_filestat_get: this.path_filestat_get.bind(this),\n      path_filestat_set_times: this.path_filestat_set_times.bind(this),\n      path_open: this.path_open.bind(this),\n      path_rename: this.path_rename.bind(this),\n      path_unlink_file: this.path_unlink_file.bind(this),\n      path_create_directory: this.path_create_directory.bind(this),\n      // Unimplemented\n      path_link: this.path_link.bind(this),\n      path_readlink: this.path_readlink.bind(this),\n      path_remove_directory: this.path_remove_directory.bind(this),\n      path_symlink: this.path_symlink.bind(this),\n      poll_oneoff: this.poll_oneoff.bind(this),\n      proc_raise: this.proc_raise.bind(this),\n      sock_accept: this.sock_accept.bind(this),\n      sock_recv: this.sock_recv.bind(this),\n      sock_send: this.sock_send.bind(this),\n      sock_shutdown: this.sock_shutdown.bind(this),\n      // Unimplemented - WASMEdge compatibility\n      sock_open: this.sock_open.bind(this),\n      sock_listen: this.sock_listen.bind(this),\n      sock_connect: this.sock_connect.bind(this),\n      sock_setsockopt: this.sock_setsockopt.bind(this),\n      sock_bind: this.sock_bind.bind(this),\n      sock_getlocaladdr: this.sock_getlocaladdr.bind(this),\n      sock_getpeeraddr: this.sock_getpeeraddr.bind(this),\n      sock_getaddrinfo: this.sock_getaddrinfo.bind(this)\n    };\n    t === \"unstable\" && (n.path_filestat_get = this.unstable_path_filestat_get.bind(this), n.fd_filestat_get = this.unstable_fd_filestat_get.bind(this), n.fd_seek = this.unstable_fd_seek.bind(this));\n    for (const [s, l] of Object.entries(n))\n      n[s] = function() {\n        let d = l.apply(this, arguments);\n        if (i) {\n          const V = rt();\n          d = i(s, [...arguments], d, V) ?? d;\n        }\n        return d;\n      };\n    return n;\n  }\n  //\n  // Helpers\n  //\n  get envArray() {\n    return Object.entries(this.context.env).map(([t, i]) => `${t}=${i}`);\n  }\n  //\n  // WASI Implementation\n  //\n  /**\n   * Read command-line argument data. The size of the array should match that\n   * returned by args_sizes_get. Each argument is expected to be \\0 terminated.\n   */\n  args_get(t, i) {\n    const n = new DataView(this.memory.buffer);\n    for (const s of this.context.args) {\n      n.setUint32(t, i, !0), t += 4;\n      const l = new TextEncoder().encode(`${s}\\0`);\n      new Uint8Array(this.memory.buffer, i, l.byteLength).set(l), i += l.byteLength;\n    }\n    return c.SUCCESS;\n  }\n  /**\n   * Return command-line argument data sizes.\n   */\n  args_sizes_get(t, i) {\n    const n = this.context.args, s = n.reduce((d, V) => d + new TextEncoder().encode(`${V}\\0`).byteLength, 0), l = new DataView(this.memory.buffer);\n    return l.setUint32(t, n.length, !0), l.setUint32(i, s, !0), c.SUCCESS;\n  }\n  /**\n   * Return the resolution of a clock. Implementations are required to provide a\n   * non-zero value for supported clocks. For unsupported clocks, return\n   * errno::inval. Note: This is similar to clock_getres in POSIX.\n   */\n  clock_res_get(t, i) {\n    switch (t) {\n      case G.REALTIME:\n      case G.MONOTONIC:\n      case G.PROCESS_CPUTIME_ID:\n      case G.THREAD_CPUTIME_ID:\n        return new DataView(this.memory.buffer).setBigUint64(i, BigInt(1e6), !0), c.SUCCESS;\n    }\n    return c.EINVAL;\n  }\n  /**\n   * Return the time value of a clock.\n   * Note: This is similar to clock_gettime in POSIX.\n   */\n  clock_time_get(t, i, n) {\n    switch (t) {\n      case G.REALTIME:\n      case G.MONOTONIC:\n      case G.PROCESS_CPUTIME_ID:\n      case G.THREAD_CPUTIME_ID:\n        return new DataView(this.memory.buffer).setBigUint64(n, W(/* @__PURE__ */ new Date()), !0), c.SUCCESS;\n    }\n    return c.EINVAL;\n  }\n  /**\n   * Read environment variable data. The sizes of the buffers should match that\n   * returned by environ_sizes_get. Key/value pairs are expected to be joined\n   * with =s, and terminated with \\0s.\n   */\n  environ_get(t, i) {\n    const n = new DataView(this.memory.buffer);\n    for (const s of this.envArray) {\n      n.setUint32(t, i, !0), t += 4;\n      const l = new TextEncoder().encode(`${s}\\0`);\n      new Uint8Array(this.memory.buffer, i, l.byteLength).set(l), i += l.byteLength;\n    }\n    return c.SUCCESS;\n  }\n  /**\n   * Return environment variable data sizes.\n   */\n  environ_sizes_get(t, i) {\n    const n = this.envArray.reduce((l, d) => l + new TextEncoder().encode(`${d}\\0`).byteLength, 0), s = new DataView(this.memory.buffer);\n    return s.setUint32(t, this.envArray.length, !0), s.setUint32(i, n, !0), c.SUCCESS;\n  }\n  /**\n   * Terminate the process normally. An exit code of 0 indicates successful\n   * termination of the program. The meanings of other values is dependent on\n   * the environment.\n   */\n  proc_exit(t) {\n    throw new v(t);\n  }\n  /**\n   * Write high-quality random data into a buffer. This function blocks when the\n   * implementation is unable to immediately provide sufficient high-quality\n   * random data. This function may execute slowly, so when large mounts of\n   * random data are required, it's advisable to use this function to seed a\n   * pseudo-random number generator, rather than to provide the random data\n   * directly.\n   */\n  random_get(t, i) {\n    const n = new Uint8Array(this.memory.buffer, t, i);\n    return globalThis.crypto.getRandomValues(n), c.SUCCESS;\n  }\n  /**\n   * Temporarily yield execution of the calling thread.\n   * Note: This is similar to sched_yield in POSIX.\n   */\n  sched_yield() {\n    return c.SUCCESS;\n  }\n  //\n  // File Descriptors\n  //\n  /**\n   * Read from a file descriptor. Note: This is similar to readv in POSIX.\n   */\n  fd_read(t, i, n, s) {\n    if (t === 1 || t === 2)\n      return c.ENOTSUP;\n    const l = new DataView(this.memory.buffer), d = K(l, i, n), V = new TextEncoder();\n    let a = 0, Z = c.SUCCESS;\n    for (const h of d) {\n      let r;\n      if (t === 0) {\n        const X = this.context.stdin(h.byteLength);\n        if (!X)\n          break;\n        r = V.encode(X);\n      } else {\n        const [X, L] = this.drive.read(t, h.byteLength);\n        if (X) {\n          Z = X;\n          break;\n        } else\n          r = L;\n      }\n      const u = Math.min(h.byteLength, r.byteLength);\n      h.set(r.subarray(0, u)), a += u;\n    }\n    return f({ bytesRead: a }), l.setUint32(s, a, !0), Z;\n  }\n  /**\n   * Write to a file descriptor. Note: This is similar to writev in POSIX.\n   */\n  fd_write(t, i, n, s) {\n    if (t === 0)\n      return c.ENOTSUP;\n    const l = new DataView(this.memory.buffer), d = K(l, i, n), V = new TextDecoder();\n    let a = 0, Z = c.SUCCESS;\n    for (const h of d)\n      if (h.byteLength !== 0) {\n        if (t === 1 || t === 2) {\n          const r = t === 1 ? this.context.stdout : this.context.stderr, u = V.decode(h);\n          r(u), f({ output: u });\n        } else if (Z = this.drive.write(t, h), Z != c.SUCCESS)\n          break;\n        a += h.byteLength;\n      }\n    return l.setUint32(s, a, !0), Z;\n  }\n  /**\n   * Provide file advisory information on a file descriptor.\n   * Note: This is similar to posix_fadvise in POSIX.\n   */\n  fd_advise() {\n    return c.SUCCESS;\n  }\n  /**\n   * Force the allocation of space in a file.\n   * Note: This is similar to posix_fallocate in POSIX.\n   */\n  fd_allocate(t, i, n) {\n    return this.drive.pwrite(t, new Uint8Array(Number(n)), Number(i));\n  }\n  /**\n   * Close a file descriptor.\n   * Note: This is similar to close in POSIX.\n   *\n   * @param fd\n   */\n  fd_close(t) {\n    return this.drive.close(t);\n  }\n  /**\n   * Synchronize the data of a file to disk.\n   * Note: This is similar to fdatasync in POSIX.\n   *\n   * @param fd\n   */\n  fd_datasync(t) {\n    return this.drive.sync(t);\n  }\n  /**\n   * Get the attributes of a file descriptor.\n   * Note: This returns similar flags to fsync(fd, F_GETFL) in POSIX,\n   * as well as additional fields.\n   *\n   * Returns fdstat - the buffer where the file descriptor's attributes\n   * are stored.\n   *\n   * @returns Result<fdstat, errno>\n   */\n  fd_fdstat_get(t, i) {\n    if (t < 3) {\n      let V;\n      if (this.context.isTTY) {\n        const Z = O ^ o.FD_SEEK ^ o.FD_TELL;\n        V = B(R.CHARACTER_DEVICE, 0, Z);\n      } else\n        V = B(R.CHARACTER_DEVICE, 0);\n      return new Uint8Array(this.memory.buffer, i, V.byteLength).set(V), c.SUCCESS;\n    }\n    if (!this.drive.exists(t))\n      return c.EBADF;\n    const n = this.drive.fileType(t), s = this.drive.fileFdflags(t), l = B(n, s);\n    return new Uint8Array(this.memory.buffer, i, l.byteLength).set(l), c.SUCCESS;\n  }\n  /**\n   * Adjust the flags associated with a file descriptor.\n   * Note: This is similar to fcntl(fd, F_SETFL, flags) in POSIX.\n   */\n  fd_fdstat_set_flags(t, i) {\n    return this.drive.setFlags(t, i);\n  }\n  /**\n   * Adjust the rights associated with a file descriptor. This can only be used\n   * to remove rights, and returns errno::notcapable if called in a way that\n   * would attempt to add rights\n   */\n  fd_fdstat_set_rights() {\n    return c.SUCCESS;\n  }\n  /**\n   * Return the attributes of an open file.\n   */\n  fd_filestat_get(t, i) {\n    return this.shared_fd_filestat_get(t, i, \"preview1\");\n  }\n  /**\n   * Return the attributes of an open file.\n   * This version is used\n   */\n  unstable_fd_filestat_get(t, i) {\n    return this.shared_fd_filestat_get(t, i, \"unstable\");\n  }\n  /**\n   * Return the attributes of an open file.\n   */\n  shared_fd_filestat_get(t, i, n) {\n    const s = n === \"unstable\" ? $ : j;\n    if (t < 3) {\n      let Z;\n      switch (t) {\n        case 0:\n          Z = \"/dev/stdin\";\n          break;\n        case 1:\n          Z = \"/dev/stdout\";\n          break;\n        case 2:\n          Z = \"/dev/stderr\";\n          break;\n        default:\n          Z = \"/dev/undefined\";\n          break;\n      }\n      const h = s({\n        path: Z,\n        byteLength: 0,\n        timestamps: {\n          access: /* @__PURE__ */ new Date(),\n          modification: /* @__PURE__ */ new Date(),\n          change: /* @__PURE__ */ new Date()\n        },\n        type: R.CHARACTER_DEVICE\n      });\n      return new Uint8Array(this.memory.buffer, i, h.byteLength).set(h), c.SUCCESS;\n    }\n    const [l, d] = this.drive.stat(t);\n    if (l != c.SUCCESS)\n      return l;\n    f({ resolvedPath: d.path, stat: d });\n    const V = s(d);\n    return new Uint8Array(this.memory.buffer, i, V.byteLength).set(V), c.SUCCESS;\n  }\n  /**\n   * Adjust the size of an open file. If this increases the file's size, the\n   * extra bytes are filled with zeros. Note: This is similar to ftruncate in\n   * POSIX.\n   */\n  fd_filestat_set_size(t, i) {\n    return this.drive.setSize(t, i);\n  }\n  /**\n   * Adjust the timestamps of an open file or directory.\n   * Note: This is similar to futimens in POSIX.\n   */\n  fd_filestat_set_times(t, i, n, s) {\n    let l = null;\n    s & U.ATIM && (l = k(i)), s & U.ATIM_NOW && (l = /* @__PURE__ */ new Date());\n    let d = null;\n    if (s & U.MTIM && (d = k(n)), s & U.MTIM_NOW && (d = /* @__PURE__ */ new Date()), l) {\n      const V = this.drive.setAccessTime(t, l);\n      if (V != c.SUCCESS)\n        return V;\n    }\n    if (d) {\n      const V = this.drive.setModificationTime(t, d);\n      if (V != c.SUCCESS)\n        return V;\n    }\n    return c.SUCCESS;\n  }\n  /**\n   * Read from a file descriptor, without using and updating the file\n   * descriptor's offset. Note: This is similar to preadv in POSIX.\n   */\n  fd_pread(t, i, n, s, l) {\n    if (t === 1 || t === 2)\n      return c.ENOTSUP;\n    if (t === 0)\n      return this.fd_read(t, i, n, l);\n    const d = new DataView(this.memory.buffer), V = K(d, i, n);\n    let a = 0, Z = c.SUCCESS;\n    for (const h of V) {\n      const [r, u] = this.drive.pread(t, h.byteLength, Number(s) + a);\n      if (r !== c.SUCCESS) {\n        Z = r;\n        break;\n      }\n      const X = Math.min(h.byteLength, u.byteLength);\n      h.set(u.subarray(0, X)), a += X;\n    }\n    return d.setUint32(l, a, !0), Z;\n  }\n  /**\n   * Return a description of the given preopened file descriptor.\n   */\n  fd_prestat_dir_name(t, i, n) {\n    if (t !== 3)\n      return c.EBADF;\n    const s = new TextEncoder().encode(\"/\");\n    return new Uint8Array(this.memory.buffer, i, n).set(s.subarray(0, n)), c.SUCCESS;\n  }\n  /**\n   * Return a description of the given preopened file descriptor.\n   */\n  fd_prestat_get(t, i) {\n    if (t !== 3)\n      return c.EBADF;\n    const n = new TextEncoder().encode(\".\"), s = new DataView(this.memory.buffer, i);\n    return s.setUint8(0, Q.DIR), s.setUint32(4, n.byteLength, !0), c.SUCCESS;\n  }\n  /**\n   * Write to a file descriptor, without using and updating the file\n   * descriptor's offset. Note: This is similar to pwritev in POSIX.\n   */\n  fd_pwrite(t, i, n, s, l) {\n    if (t === 0)\n      return c.ENOTSUP;\n    if (t === 1 || t === 2)\n      return this.fd_write(t, i, n, l);\n    const d = new DataView(this.memory.buffer), V = K(d, i, n);\n    let a = 0, Z = c.SUCCESS;\n    for (const h of V)\n      if (h.byteLength !== 0) {\n        if (Z = this.drive.pwrite(t, h, Number(s)), Z != c.SUCCESS)\n          break;\n        a += h.byteLength;\n      }\n    return d.setUint32(l, a, !0), Z;\n  }\n  /**\n   * Read directory entries from a directory. When successful, the contents of\n   * the output buffer consist of a sequence of directory entries. Each\n   * directory entry consists of a dirent object, followed by dirent::d_namlen\n   * bytes holding the name of the directory entry. This function fills the\n   * output buffer as much as possible, potentially truncating the last\n   * directory entry. This allows the caller to grow its read buffer size in\n   * case it's too small to fit a single large directory entry, or skip the\n   * oversized directory entry.\n   */\n  fd_readdir(t, i, n, s, l) {\n    const [d, V] = this.drive.list(t);\n    if (d != c.SUCCESS)\n      return d;\n    let a = [], Z = 0;\n    for (const { name: N, type: F } of V) {\n      const g = ot(N, F, Z);\n      a.push(g), Z++;\n    }\n    a = a.slice(Number(s));\n    const h = a.reduce((N, F) => N + F.byteLength, 0), r = new Uint8Array(h);\n    let u = 0;\n    for (const N of a)\n      r.set(N, u), u += N.byteLength;\n    const X = new Uint8Array(this.memory.buffer, i, n), L = r.subarray(0, n);\n    return X.set(L), new DataView(this.memory.buffer).setUint32(l, L.byteLength, !0), c.SUCCESS;\n  }\n  /**\n   * Atomically replace a file descriptor by renumbering another file\n   * descriptor. Due to the strong focus on thread safety, this environment does\n   * not provide a mechanism to duplicate or renumber a file descriptor to an\n   * arbitrary number, like dup2(). This would be prone to race conditions, as\n   * an actual file descriptor with the same number could be allocated by a\n   * different thread at the same time. This function provides a way to\n   * atomically renumber file descriptors, which would disappear if dup2() were\n   * to be removed entirely.\n   */\n  fd_renumber(t, i) {\n    return this.drive.renumber(t, i);\n  }\n  /**\n   * Move the offset of a file descriptor.\n   *\n   * The offset is specified as a bigint here\n   * Note: This is similar to lseek in POSIX.\n   *\n   * The offset, and return type are FileSize (u64) which is represented by\n   * bigint in JavaScript.\n   */\n  fd_seek(t, i, n, s) {\n    const [l, d] = this.drive.seek(t, i, n);\n    return l !== c.SUCCESS || (f({ newOffset: d.toString() }), new DataView(this.memory.buffer).setBigUint64(s, d, !0)), l;\n  }\n  unstable_fd_seek(t, i, n, s) {\n    const l = bt[n];\n    return this.fd_seek(t, i, l, s);\n  }\n  /**\n   * Synchronize the data and metadata of a file to disk.\n   * Note: This is similar to fsync in POSIX.\n   */\n  fd_sync(t) {\n    return this.drive.sync(t);\n  }\n  /**\n   * Return the current offset of a file descriptor.\n   * Note: This is similar to lseek(fd, 0, SEEK_CUR) in POSIX.\n   *\n   * The return type is FileSize (u64) which is represented by bigint in JS.\n   *\n   */\n  fd_tell(t, i) {\n    const [n, s] = this.drive.tell(t);\n    return n !== c.SUCCESS || new DataView(this.memory.buffer).setBigUint64(i, s, !0), n;\n  }\n  //\n  // Paths\n  //\n  path_filestat_get(t, i, n, s, l) {\n    return this.shared_path_filestat_get(t, i, n, s, l, \"preview1\");\n  }\n  unstable_path_filestat_get(t, i, n, s, l) {\n    return this.shared_path_filestat_get(t, i, n, s, l, \"unstable\");\n  }\n  /**\n   * Return the attributes of a file or directory.\n   * Note: This is similar to stat in POSIX.\n   */\n  shared_path_filestat_get(t, i, n, s, l, d) {\n    const V = d === \"unstable\" ? $ : j, a = new TextDecoder().decode(new Uint8Array(this.memory.buffer, n, s));\n    f({ path: a });\n    const [Z, h] = this.drive.pathStat(t, a);\n    if (Z != c.SUCCESS)\n      return Z;\n    const r = V(h);\n    return new Uint8Array(this.memory.buffer, l, r.byteLength).set(r), Z;\n  }\n  /**\n   * Adjust the timestamps of a file or directory.\n   * Note: This is similar to utimensat in POSIX.\n   */\n  path_filestat_set_times(t, i, n, s, l, d, V) {\n    let a = null;\n    V & U.ATIM && (a = k(l)), V & U.ATIM_NOW && (a = /* @__PURE__ */ new Date());\n    let Z = null;\n    V & U.MTIM && (Z = k(d)), V & U.MTIM_NOW && (Z = /* @__PURE__ */ new Date());\n    const h = new TextDecoder().decode(new Uint8Array(this.memory.buffer, n, s));\n    if (a) {\n      const r = this.drive.pathSetAccessTime(t, h, a);\n      if (r != c.SUCCESS)\n        return r;\n    }\n    if (Z) {\n      const r = this.drive.pathSetModificationTime(t, h, Z);\n      if (r != c.SUCCESS)\n        return r;\n    }\n    return c.SUCCESS;\n  }\n  /**\n   * Open a file or directory. The returned file descriptor is not guaranteed to\n   * be the lowest-numbered file descriptor not currently open; it is randomized\n   * to prevent applications from depending on making assumptions about indexes,\n   * since this is error-prone in multi-threaded contexts. The returned file\n   * descriptor is guaranteed to be less than 2**31.\n   * Note: This is similar to openat in POSIX.\n   * @param fd: fd\n   * @param dirflags: lookupflags Flags determining the method of how the path\n   *                  is resolved. Not supported by Runno (symlinks)\n   * @param path: string The relative path of the file or directory to open,\n   *              relative to the path_open::fd directory.\n   * @param oflags: oflags The method by which to open the file.\n   * @param fs_rights_base: rights The initial rights of the newly created file\n   *                        descriptor. The implementation is allowed to return\n   *                        a file descriptor with fewer rights than specified,\n   *                        if and only if those rights do not apply to the type\n   *                        of file being opened. The base rights are rights\n   *                        that will apply to operations using the file\n   *                        descriptor itself, while the inheriting rights are\n   *                        rights that apply to file descriptors derived from\n   *                        it.\n   * @param fs_rights_inheriting: rights\n   * @param fdflags: fdflags\n   *\n   */\n  path_open(t, i, n, s, l, d, V, a, Z) {\n    const h = new DataView(this.memory.buffer), r = I(this.memory, n, s), u = !!(l & T.CREAT), X = !!(l & T.DIRECTORY), L = !!(l & T.EXCL), _ = !!(l & T.TRUNC), N = !!(a & E.APPEND), F = !!(a & E.DSYNC), g = !!(a & E.NONBLOCK), nt = !!(a & E.RSYNC), st = !!(a & E.SYNC);\n    f({\n      path: r,\n      openFlags: {\n        createFileIfNone: u,\n        failIfNotDir: X,\n        failIfFileExists: L,\n        truncateFile: _\n      },\n      fileDescriptorFlags: {\n        flagAppend: N,\n        flagDSync: F,\n        flagNonBlock: g,\n        flagRSync: nt,\n        flagSync: st\n      }\n    });\n    const [M, ct] = this.drive.open(t, r, l, a);\n    return M || (h.setUint32(Z, ct, !0), M);\n  }\n  /**\n   * Rename a file or directory. Note: This is similar to renameat in POSIX.\n   */\n  path_rename(t, i, n, s, l, d) {\n    const V = I(this.memory, i, n), a = I(this.memory, l, d);\n    return f({ oldPath: V, newPath: a }), this.drive.rename(t, V, s, a);\n  }\n  /**\n   * Unlink a file. Return errno::isdir if the path refers to a directory.\n   * Note: This is similar to unlinkat(fd, path, 0) in POSIX.\n   */\n  path_unlink_file(t, i, n) {\n    const s = I(this.memory, i, n);\n    return f({ path: s }), this.drive.unlink(t, s);\n  }\n  /**\n   * Concurrently poll for the occurrence of a set of events.\n   */\n  poll_oneoff(t, i, n, s) {\n    for (let d = 0; d < n; d++) {\n      const V = new Uint8Array(this.memory.buffer, t + d * x, x), a = mt(V), Z = new Uint8Array(this.memory.buffer, i + d * z, z);\n      let h = 0, r = c.SUCCESS;\n      switch (a.type) {\n        case p.CLOCK:\n          for (; /* @__PURE__ */ new Date() < a.timeout; )\n            ;\n          Z.set(ut(a.userdata, c.SUCCESS));\n          break;\n        case p.FD_READ:\n          if (a.fd < 3)\n            a.fd === 0 ? (r = c.SUCCESS, h = 32) : r = c.EBADF;\n          else {\n            const [u, X] = this.drive.stat(a.fd);\n            r = u, h = X ? X.byteLength : 0;\n          }\n          Z.set(q(a.userdata, r, p.FD_READ, BigInt(h)));\n          break;\n        case p.FD_WRITE:\n          if (h = 0, r = c.SUCCESS, a.fd < 3)\n            a.fd === 0 ? r = c.EBADF : (r = c.SUCCESS, h = 1024);\n          else {\n            const [u, X] = this.drive.stat(a.fd);\n            r = u, h = X ? X.byteLength : 0;\n          }\n          Z.set(q(a.userdata, r, p.FD_READ, BigInt(h)));\n          break;\n      }\n    }\n    return new DataView(this.memory.buffer, s, 4).setUint32(0, n, !0), c.SUCCESS;\n  }\n  /**\n   * Create a directory. Note: This is similar to mkdirat in POSIX.\n   */\n  path_create_directory(t, i, n) {\n    const s = I(this.memory, i, n);\n    return this.drive.pathCreateDir(t, s);\n  }\n  //\n  // Unimplemented - these operations are not supported by Runno\n  //\n  /**\n   * Create a hard link. Note: This is similar to linkat in POSIX.\n   */\n  path_link() {\n    return c.ENOSYS;\n  }\n  /**\n   * Read the contents of a symbolic link.\n   * Note: This is similar to readlinkat in POSIX.\n   */\n  path_readlink() {\n    return c.ENOSYS;\n  }\n  /**\n   * Remove a directory. Return errno::notempty if the directory is not empty.\n   * Note: This is similar to unlinkat(fd, path, AT_REMOVEDIR) in POSIX.\n   */\n  path_remove_directory() {\n    return c.ENOSYS;\n  }\n  /**\n   * Create a symbolic link. Note: This is similar to symlinkat in POSIX.\n   */\n  path_symlink() {\n    return c.ENOSYS;\n  }\n  /**\n   * Send a signal to the process of the calling thread.\n   * Note: This is similar to raise in POSIX.\n   */\n  proc_raise() {\n    return c.ENOSYS;\n  }\n  /**\n   * Accept a new incoming connection. Note: This is similar to accept in POSIX.\n   */\n  sock_accept() {\n    return c.ENOSYS;\n  }\n  /**\n   * Receive a message from a socket. Note: This is similar to recv in POSIX,\n   * though it also supports reading the data into multiple buffers in the\n   * manner of readv.\n   */\n  sock_recv() {\n    return c.ENOSYS;\n  }\n  /**\n   * Send a message on a socket. Note: This is similar to send in POSIX, though\n   * it also supports writing the data from multiple buffers in the manner of\n   * writev.\n   */\n  sock_send() {\n    return c.ENOSYS;\n  }\n  /**\n   * Shut down socket send and receive channels. Note: This is similar to\n   * shutdown in POSIX.\n   */\n  sock_shutdown() {\n    return c.ENOSYS;\n  }\n  //\n  // Unimplemented - these are for compatibility with Wasmedge\n  //\n  sock_open() {\n    return c.ENOSYS;\n  }\n  sock_listen() {\n    return c.ENOSYS;\n  }\n  sock_connect() {\n    return c.ENOSYS;\n  }\n  sock_setsockopt() {\n    return c.ENOSYS;\n  }\n  sock_bind() {\n    return c.ENOSYS;\n  }\n  sock_getlocaladdr() {\n    return c.ENOSYS;\n  }\n  sock_getpeeraddr() {\n    return c.ENOSYS;\n  }\n  sock_getaddrinfo() {\n    return c.ENOSYS;\n  }\n}\nconst O = o.FD_DATASYNC | o.FD_READ | o.FD_SEEK | o.FD_FDSTAT_SET_FLAGS | o.FD_SYNC | o.FD_TELL | o.FD_WRITE | o.FD_ADVISE | o.FD_ALLOCATE | o.PATH_CREATE_DIRECTORY | o.PATH_CREATE_FILE | o.PATH_LINK_SOURCE | o.PATH_LINK_TARGET | o.PATH_OPEN | o.FD_READDIR | o.PATH_READLINK | o.PATH_RENAME_SOURCE | o.PATH_RENAME_TARGET | o.PATH_FILESTAT_GET | o.PATH_FILESTAT_SET_SIZE | o.PATH_FILESTAT_SET_TIMES | o.FD_FILESTAT_GET | o.FD_FILESTAT_SET_SIZE | o.FD_FILESTAT_SET_TIMES | o.PATH_SYMLINK | o.PATH_REMOVE_DIRECTORY | o.PATH_UNLINK_FILE | o.POLL_FD_READWRITE | o.SOCK_SHUTDOWN | o.SOCK_ACCEPT;\nclass v extends Error {\n  constructor(i) {\n    super();\n    m(this, \"code\");\n    this.code = i;\n  }\n}\nfunction I(e, t, i) {\n  return new TextDecoder().decode(new Uint8Array(e.buffer, t, i));\n}\nfunction K(e, t, i) {\n  let n = Array(i);\n  for (let s = 0; s < i; s++) {\n    const l = e.getUint32(t, !0);\n    t += 4;\n    const d = e.getUint32(t, !0);\n    t += 4, n[s] = new Uint8Array(e.buffer, l, d);\n  }\n  return n;\n}\nfunction mt(e) {\n  const t = new Uint8Array(8);\n  t.set(e.subarray(0, 8));\n  const i = e[8], n = new DataView(e.buffer, e.byteOffset + 9);\n  switch (i) {\n    case p.FD_READ:\n    case p.FD_WRITE:\n      return {\n        userdata: t,\n        type: i,\n        fd: n.getUint32(0, !0)\n      };\n    case p.CLOCK:\n      const s = n.getUint16(24, !0), l = W(/* @__PURE__ */ new Date()), d = n.getBigUint64(8, !0), V = n.getBigUint64(16, !0), a = s & et.SUBSCRIPTION_CLOCK_ABSTIME ? d : l + d;\n      return {\n        userdata: t,\n        type: i,\n        id: n.getUint32(0, !0),\n        timeout: k(a),\n        precision: k(a + V)\n      };\n  }\n}\nfunction j(e) {\n  const t = new Uint8Array(P), i = new DataView(t.buffer);\n  return i.setBigUint64(0, BigInt(0), !0), i.setBigUint64(8, BigInt(w(e.path)), !0), i.setUint8(16, e.type), i.setBigUint64(24, BigInt(1), !0), i.setBigUint64(32, BigInt(e.byteLength), !0), i.setBigUint64(40, W(e.timestamps.access), !0), i.setBigUint64(48, W(e.timestamps.modification), !0), i.setBigUint64(56, W(e.timestamps.change), !0), t;\n}\nfunction $(e) {\n  const t = new Uint8Array(P), i = new DataView(t.buffer);\n  return i.setBigUint64(0, BigInt(0), !0), i.setBigUint64(8, BigInt(w(e.path)), !0), i.setUint8(16, e.type), i.setUint32(20, 1, !0), i.setBigUint64(24, BigInt(e.byteLength), !0), i.setBigUint64(32, W(e.timestamps.access), !0), i.setBigUint64(40, W(e.timestamps.modification), !0), i.setBigUint64(48, W(e.timestamps.change), !0), t;\n}\nfunction B(e, t, i) {\n  const n = i ?? O, s = i ?? O, l = new Uint8Array(24), d = new DataView(l.buffer, 0, 24);\n  return d.setUint8(0, e), d.setUint32(2, t, !0), d.setBigUint64(8, n, !0), d.setBigUint64(16, s, !0), l;\n}\nfunction ot(e, t, i) {\n  const n = new TextEncoder().encode(e), s = 24 + n.byteLength, l = new Uint8Array(s), d = new DataView(l.buffer);\n  return d.setBigUint64(0, BigInt(i + 1), !0), d.setBigUint64(8, BigInt(w(e)), !0), d.setUint32(16, n.length, !0), d.setUint8(20, t), l.set(n, 24), l;\n}\nfunction ut(e, t) {\n  const i = new Uint8Array(32);\n  i.set(e, 0);\n  const n = new DataView(i.buffer);\n  return n.setUint16(8, t, !0), n.setUint16(10, p.CLOCK, !0), i;\n}\nfunction q(e, t, i, n) {\n  const s = new Uint8Array(32);\n  s.set(e, 0);\n  const l = new DataView(s.buffer);\n  return l.setUint16(8, t, !0), l.setUint16(10, i, !0), l.setBigUint64(16, n, !0), s;\n}\nfunction w(e, t = 0) {\n  let i = 3735928559 ^ t, n = 1103547991 ^ t;\n  for (let s = 0, l; s < e.length; s++)\n    l = e.charCodeAt(s), i = Math.imul(i ^ l, 2654435761), n = Math.imul(n ^ l, 1597334677);\n  return i = Math.imul(i ^ i >>> 16, 2246822507) ^ Math.imul(n ^ n >>> 13, 3266489909), n = Math.imul(n ^ n >>> 16, 2246822507) ^ Math.imul(i ^ i >>> 13, 3266489909), 4294967296 * (2097151 & n) + (i >>> 0);\n}\nfunction W(e) {\n  return BigInt(e.getTime()) * BigInt(1e6);\n}\nfunction k(e) {\n  return new Date(Number(e / BigInt(1e6)));\n}\nconst bt = {\n  [C.CUR]: y.CUR,\n  [C.END]: y.END,\n  [C.SET]: y.SET\n}, it = \"\", tt = typeof window < \"u\" && window.Blob && new Blob([atob(it)], { type: \"text/javascript;charset=utf-8\" });\nfunction Xt() {\n  let e;\n  try {\n    if (e = tt && (window.URL || window.webkitURL).createObjectURL(tt), !e)\n      throw \"\";\n    return new Worker(e);\n  } catch {\n    return new Worker(\"data:application/javascript;base64,\" + it);\n  } finally {\n    e && (window.URL || window.webkitURL).revokeObjectURL(e);\n  }\n}\nfunction Rt(e, t) {\n  e.postMessage(t);\n}\nclass St extends Error {\n}\nclass Et {\n  constructor(t, i) {\n    m(this, \"binaryURL\");\n    // 8kb should be big enough\n    m(this, \"stdinBuffer\", new SharedArrayBuffer(8 * 1024));\n    m(this, \"context\");\n    m(this, \"result\");\n    m(this, \"worker\");\n    m(this, \"reject\");\n    this.binaryURL = t, this.context = i;\n  }\n  async start() {\n    if (this.result)\n      throw new Error(\"WASIWorker Host can only be started once\");\n    return this.result = new Promise((t, i) => {\n      this.reject = i, this.worker = new Xt(), this.worker.addEventListener(\"message\", (n) => {\n        var l, d, V, a, Z, h;\n        const s = n.data;\n        switch (s.type) {\n          case \"stdout\":\n            (d = (l = this.context).stdout) == null || d.call(l, s.text);\n            break;\n          case \"stderr\":\n            (a = (V = this.context).stderr) == null || a.call(V, s.text);\n            break;\n          case \"debug\":\n            (h = (Z = this.context).debug) == null || h.call(Z, s.name, s.args, s.ret, s.data);\n            break;\n          case \"result\":\n            t(s.result);\n            break;\n          case \"crash\":\n            i(s.error);\n            break;\n        }\n      }), Rt(this.worker, {\n        target: \"client\",\n        type: \"start\",\n        binaryURL: this.binaryURL,\n        stdinBuffer: this.stdinBuffer,\n        // Unfortunately can't just splat these because it includes types\n        // that can't be sent as a message.\n        args: this.context.args,\n        env: this.context.env,\n        fs: this.context.fs,\n        isTTY: this.context.isTTY\n      });\n    }), this.result;\n  }\n  kill() {\n    var t;\n    if (!this.worker)\n      throw new Error(\"WASIWorker has not started\");\n    this.worker.terminate(), (t = this.reject) == null || t.call(this, new St(\"WASI Worker was killed\"));\n  }\n  async pushStdin(t) {\n    const i = new DataView(this.stdinBuffer);\n    for (; i.getInt32(0) !== 0; )\n      await new Promise((l) => setTimeout(l, 0));\n    const n = new TextEncoder().encode(t);\n    new Uint8Array(this.stdinBuffer, 4).set(n), i.setInt32(0, n.byteLength), Atomics.notify(new Int32Array(this.stdinBuffer), 0);\n  }\n  async pushEOF() {\n    const t = new DataView(this.stdinBuffer);\n    for (; t.getInt32(0) !== 0; )\n      await new Promise((i) => setTimeout(i, 0));\n    t.setInt32(0, -1), Atomics.notify(new Int32Array(this.stdinBuffer), 0);\n  }\n}\nexport {\n  A as InitializationError,\n  J as InvalidInstanceError,\n  H as WASI,\n  Zt as WASIContext,\n  Gt as WASISnapshotPreview1,\n  Et as WASIWorkerHost,\n  St as WASIWorkerHostKilledError\n};\n", "import { WASI } from \"@runno/wasi\";\n\n\nclass TwelfService {\n  constructor(public twelfWasm: Promise<BufferSource>) { }\n\n  async exec(twelfContent: string) {\n    const stdin = \"loadFile /single.elf\\n\";\n    let stdinMark = 0;\n\n    function readStdin(numBytes: number): string | null {\n      const bytes = Math.min(numBytes, stdin.length - stdinMark);\n      if (bytes == 0) return null;\n      const rv = stdin.substr(stdinMark, bytes);\n      stdinMark += bytes;\n      return rv;\n    }\n\n    const output: string[] = [];\n\n    const wasi = new WASI({\n      args: [\"twelf-server\"],\n      env: {},\n      stdout: (out) => {\n        output.push(out);\n      },\n      stderr: (err) => {\n        output.push(err);\n      },\n      stdin: readStdin,\n      fs: {\n        \"/single.elf\": {\n          path: \"/single.elf\",\n          timestamps: {\n            access: new Date(),\n            change: new Date(),\n            modification: new Date(),\n          },\n          mode: \"string\",\n          content: `${twelfContent}\\n`,\n        },\n      },\n    });\n\n    const wasmInstance = await WebAssembly.instantiate(await (this.twelfWasm), {\n      ...wasi.getImportObject(),\n    });\n\n    const result = wasi.start(wasmInstance, {});\n    (document.getElementById('twelf-response') as HTMLTextAreaElement).value =\n      output.slice(3).filter(x => x != `[Closing file /single.elf]\\n`).join('');\n  }\n}\n\nasync function init() {\n  const twelfService = new TwelfService((await fetch(\"assets/twelf.wasm\")).arrayBuffer());\n  const button = document.getElementById('check-button') as HTMLButtonElement;\n  button.onclick = () => {\n    twelfService.exec((document.getElementById('primary-view') as HTMLTextAreaElement).value);\n  }\n  button.removeAttribute('disabled');\n}\n\ninit();\n"],
  "mappings": "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",
  "names": ["x"]
}
